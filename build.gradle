plugins {
	id 'fabric-loom' version '1.11-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version + "+" +project.minecraft_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.

	mavenCentral()
	maven { url = 'https://jitpack.io' }
}

loom {
	splitEnvironmentSourceSets()

	mods {
		"inflib" {
			sourceSet sourceSets.main
            sourceSet sourceSets.client
		}
	}
    runConfigs.all {
        ideConfigGenerated true // Run configurations are not created for subprojects by default
        runDir "../../run" // Use a shared run folder and create separate worlds
    }
}

fabricApi {
	configureDataGeneration {
		client = true
	}
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	testImplementation "net.fabricmc:fabric-loader-junit:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    include(implementation(annotationProcessor("io.github.llamalad7:mixinextras-fabric:0.5.0")))
}

test {
	useJUnitPlatform()
}

processResources {
	inputs.property "version", project.version
    inputs.property "minecraft", minecraft_version
    inputs.property "fabric_api", fabric_version
    inputs.property "loader", loader_version
    def map = ["version": project.version,
                "minecraft": minecraft_version,
                "fabric_api": fabric_version,
                "loader": loader_version]
	filesMatching("fabric.mod.json") {
		expand map
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}" }
	}
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
            groupId = project.maven_group
            artifactId = project.archives_base_name
            version = version
			from components.java
		}


	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}